"""
Django settings for help project.

Generated by 'django-admin startproject' using Django 1.9.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

import dj_database_url
import environ


env = environ.Env()

DEBUG = env.bool('DEBUG', False)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
PROJECT_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str('SECRET_KEY')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'directory_components',
    'export_elements',
    'contact',
    'thumber',
    'captcha',
    'help',
]

MIDDLEWARE_CLASSES = [
    'directory_components.middleware.MaintenanceModeMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'admin_ip_restrictor.middleware.AdminIPRestrictorMiddleware',
    'directory_components.middleware.RobotsIndexControlHeaderMiddlware',
]

ROOT_URLCONF = 'help.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'directory_components.context_processors.urls_processor',
                'directory_components.context_processors.analytics',
                'directory_components.context_processors.cookie_notice',
                ('directory_components.context_processors.'
                    'header_footer_processor'),
                'sso.context_processors.sso_processor',
                'contact.context_processors.hosts',
            ],
        },
    },
]

WSGI_APPLICATION = 'help.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(),
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

CSRF_COOKIE_HTTPONLY = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

# Extra places for collectstatic to find static files.
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'compiled_static'),
)


STATICFILES_STORAGE = env.str(
    'STATICFILES_STORAGE', 'whitenoise.django.GzipManifestStaticFilesStorage'
)

ZENDESK_URL = env.str('ZENDESK_URL', '')
ZENDESK_USER = env.str('ZENDESK_USER', '')
ZENDESK_TOKEN = env.str('ZENDESK_TOKEN', '')
ZENDESK_TEST_URL = env.str('ZENDESK_TEST_URL', '')

USE_CAPTCHA = env.bool('USE_CAPTCHA', False)

RECAPTCHA_PUBLIC_KEY = env.str('CAPTCHA_SITE_KEY', '')
RECAPTCHA_PRIVATE_KEY = env.str('CAPTCHA_SECRET_KEY', '')
# NOCAPTCHA = True turns on version 2 of recaptcha
NOCAPTCHA = True


RESTRICT_IPS = env.bool('RESTRICT_IPS', False)

COMPANIES_HOUSE_API_KEY = env.str('COMPANIES_HOUSE_KEY', '')

RATELIMIT_STATUS_CODE = 429  # For the brake module, unless specified (weirdly) uses 403

# Hosts for various services, used in templates
SOO_HOST = env.str(
    'SOO_HOST', 'https://selling-online-overseas.export.great.gov.uk/'
)
HELP_HOST = env.str('HELP_HOST', 'https://contact-us.export.great.gov.uk/')
SSO_HOST = env.str('SSO_HOST', 'https://sso.trade.great.gov.uk/')
PROFILE_HOST = env.str('PROFILE_HOST', 'https://profile.great.gov.uk/')

ZENDESK_RESP_CODE = env.str('ZENDESK_RESP_CODE', '')

# SSO
SSO_PROXY_LOGIN_URL = env.str(
    'SSO_PROXY_LOGIN_URL', 'http://sso.trade.great:8004/accounts/login/'
)
SSO_PROXY_SIGNUP_URL = env.str(
    'SSO_PROXY_SIGNUP_URL', 'http://sso.trade.great:8004/accounts/signup/'
)
SSO_PROFILE_URL = env.str(
    'SSO_PROFILE_URL',
    'http://profile.trade.great:8006/selling-online-overseas/'
)
SSO_PROXY_LOGOUT_URL = env.str(
    'SSO_PROXY_LOGOUT_URL', 'http://sso.trade.great:8004/accounts/'
    'logout/?next=http://contact.trade.great:8009'
)

# HEADER/FOOTER URLS
HEADER_FOOTER_URLS_GREAT_HOME = env.str("HEADER_FOOTER_URLS_GREAT_HOME", '')
HEADER_FOOTER_URLS_FAB = env.str("HEADER_FOOTER_URLS_FAB", '')
HEADER_FOOTER_URLS_SOO = env.str("HEADER_FOOTER_URLS_SOO", '')
HEADER_FOOTER_URLS_CONTACT_US = env.str("HEADER_FOOTER_URLS_CONTACT_US", '')

# Admin restrictor
RESTRICT_ADMIN_BY_IPS = env.bool('RESTRICT_ADMIN_BY_IPS', False)
RESTRICT_ADMIN = RESTRICT_ADMIN_BY_IPS
ALLOWED_ADMIN_IPS = env.list('ALLOWED_ADMIN_IPS', default=[])
ALLOWED_ADMIN_IP_RANGES = env.list('ALLOWED_ADMIN_IP_RANGES', default=[])

GOOGLE_TAG_MANAGER_ID = env.str('GOOGLE_TAG_MANAGER_ID')
GOOGLE_TAG_MANAGER_ENV = env.str('GOOGLE_TAG_MANAGER_ENV', '')
UTM_COOKIE_DOMAIN = env.str('UTM_COOKIE_DOMAIN', '')
PRIVACY_COOKIE_DOMAIN = env.str('PRIVACY_COOKIE_DOMAIN')

# feature flags
FEATURE_FLAGS = {
    # used by directory-components
    'SEARCH_ENGINE_INDEXING_OFF': env.bool(
        'FEATURE_SEARCH_ENGINE_INDEXING_DISABLED', False
    ),
    # used by directory-components
    'MAINTENANCE_MODE_ON': env.bool('FEATURE_MAINTENANCE_MODE_ENABLED', False),
}

RAVEN_CONFIG = {
    'dsn': env.str('SENTRY_DSN', ''),
}
